Using Git Reflections 1

How did viewing a diff between two versions of a file help you see the bug that was introduced?
Using an automated program helps to focus your effort.
You only look at areas that have changed.
The tedium of looking through every line is avoided.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It would be easier to find changes that caused problems.
It would be easier to undo changes that were otherwise undesirable.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
There is the potential to forget to commit often enough.
Commits can be made at logical points, vice arbitrary ones.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Google docs is oriented towards correspondence, reports, and other individual documents.
Git is oriented towards coding, with a recognition of the interrelationship of multiple source files.

How can you use the commands git log and git diff to view the history of files?
git log shows the versions that have been saved.
diff can compare any two commits and highlight the differences.

How might using version control make you more confident to make changes that could break something?
The ability to revert to a working version makes it safe to break things.

Now that you have your workspace set up, what do you want to try using Git for?
Managing my programs and work documents.

